{"version":3,"sources":["components/table.js","components/firebase.js","components/register.js","components/login.js","index.js"],"names":["Table","state","data","isLoading","fetch","then","response","json","setState","rates","this","className","getExchangeData","buf","cur","cur_name","i","length","currencyCode","currencyName","currencyRate","push","Component","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","props","init","bind","logout","firebase","initializeApp","auth","firestore","storage","persistence","Auth","Persistence","signOut","window","location","assign","Register","class","onSubmit","e","preventDefault","isValid","id","type","required","minLength","maxLength","placeholder","accept","style","marginTop","statusString","colorSpan","statusSpan","document","getElementById","messageSpan","color","ReactDOM","render","formName","formSurname","formEmail","formPassword","formPassword1","formPhoto","uploadPh","name_pattern","RegExp","email_pattern","test","value","alert","files","includes","size","registration","uid","userData","collection","doc","set","name","surname","avatar","result","renderStatus","storageRef","ref","metadata","contentType","child","put","upload","catch","error","message","uploadPhoto","formUserData","createUserWithEmailAndPassword","user","uploadUserData","currentUser","Login","login","defaultValue","textDecoration","to","email","password","signInWithEmailAndPassword","setPersistence","SESSION","x","prototype","App","isLoggedIn","onAuthStateChanged","renderHeader","path","component","exact","onClick","href","renderLoggedIn","renderLoggedOut"],"mappings":"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","file":"static/js/main.d9699aa1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./css/table.css\";\r\n\r\nclass Table extends Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            isLoading: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let url = \"https://api.exchangeratesapi.io/latest?base=RUB\";\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            this.setState({\r\n                data: json.rates,\r\n                isLoading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <h1>Loading...</h1>\r\n        }\r\n\r\n        return (\r\n            <div className=\"Table\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"TableHeader\">Код валюты</th>\r\n                            <th className=\"TableHeader\">Полное название валюты</th>\r\n                            <th className=\"TableHeader\">Курс валюты по отношению к рублю</th>\r\n                        </tr>\r\n                        {this.getExchangeData()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getExchangeData() {\r\n        let buf = [];\r\n        let cur = [\r\n            'CAD', 'HKD', 'ISK', 'PHP', 'DKK', 'HUF', 'CZK', 'GBP', 'RON', 'SEK', 'IDR',\r\n            'INR', 'BRL', 'RUB', 'HRK', 'JPY', 'THB', 'CHF', 'EUR', 'MYR', 'BGN', 'TRY',\r\n            'CNY', 'NOK', 'NZD', 'ZAR', 'USD', 'MXN', 'SGD', 'AUD', 'ILS', 'KRW', 'PLN'\r\n        ];\r\n        let cur_name = [\r\n            'Канадский доллар', 'Гонконгский доллар', 'Исландская крона', 'Филиппинское песо', 'Датская крона',\r\n            'Венгерский форинт', 'Чешская крона', 'Фунт стерлингов', 'Румынский лей', 'Шведская крона', 'Индонезийская рупия',\r\n            'Индийская рупия', 'Бразильский реал', 'Российский рубль', 'Хорватская куна', 'Японская иена', 'Тайский бат',\r\n            'Швейцарский франк', 'Евро', 'Малайзийский ринггит', 'Болгарский лев', 'Турецкая лира', 'Китайский юань',\r\n            'Норвежская крона', 'Новозеландский доллар', 'Южноафриканский рэнд', 'Доллар', 'Мексиканское песо',\r\n            'Сингапурский доллар', 'Австралийский доллар', 'Израильский шекель', 'Южнокорейская вона', 'Польский злотый' \r\n        ];\r\n        \r\n        let rates = this.state.data;\r\n\r\n        for (let i = 0; i < cur.length; i++) {\r\n            let currencyCode = cur[i];\r\n            let currencyName = cur_name[i];\r\n            let currencyRate = rates[cur[i]];\r\n\r\n            buf.push(\r\n                <tr>\r\n                    <th>{currencyCode}</th>\r\n                    <th>{currencyName}</th>\r\n                    <th>{currencyRate}</th>\r\n                </tr>\r\n            );\r\n        }\r\n        return buf;\r\n    }\r\n}\r\nexport default Table;","import { Component } from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyApgA1GXCf1yDh-g0zRVZXn8iw-TF0pzKQ\",\r\n    authDomain: \"converter-28be3.firebaseapp.com\",\r\n    databaseURL: \"https://converter-28be3.firebaseio.com\",\r\n    projectId: \"converter-28be3\",\r\n    storageBucket: \"converter-28be3.appspot.com\",\r\n    messagingSenderId: \"804809298279\",\r\n    appId: \"1:804809298279:web:729b5601d5de3b71cf1fc2\"\r\n};\r\n\r\nclass Firebase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.init = this.init.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n    \r\n    init() {\r\n        firebase.initializeApp(firebaseConfig);\r\n        \r\n        Firebase.auth = firebase.auth();\r\n        Firebase.firestore = firebase.firestore();\r\n        Firebase.storage = firebase.storage();\r\n        Firebase.persistence = firebase.auth.Auth.Persistence;\r\n    }\r\n    \r\n    logout() {\r\n        Firebase.auth.signOut()\r\n            .then(function () {\r\n                window.location.assign('#');\r\n            })\r\n    };\r\n}\r\nexport default Firebase;","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/register.css\";\r\nimport Firebase from \"./firebase\"\r\n\r\nclass Register extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"formBlockContainer\">\r\n                <div className=\"formBlock\">\r\n                    <div class=\"title\">Зарегистрироваться</div>\r\n                    <form class=\"formApplication\" onSubmit={e => { e.preventDefault(); this.isValid()}}>\r\n                        <div class=\"formName\">\r\n                            <input class=\"InputMain\" id=\"name\" type=\"text\" required minLength=\"2\" maxLength=\"30\" placeholder=\"Иван\" />\r\n                            <label class=\"formNameLabel\">\r\n                                ИМЯ\r\n                                <span class=\"inputRequired\">*</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div class=\"formSurname\">\r\n                            <input class=\"InputMain\" id=\"surname\" type=\"text\" required minLength=\"2\" maxLength=\"30\" placeholder=\"Иванов\" />\r\n                            <label class=\"formSurnameLabel\">\r\n                                ФАМИЛИЯ\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div class=\"formEmail\">\r\n                            <input class=\"InputMain\" id=\"email\" type=\"email\" required placeholder=\"ivan21@mail.ru\" />\r\n                            <label class=\"formEmailLabel\">\r\n                                EMAIL\r\n                                <span class=\"inputRequired\">*</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div class=\"formPassword\">\r\n                            <input class=\"InputMain\" id=\"password\" type=\"password\"/>\r\n                            <label class=\"formPasswordLabel\">\r\n                                Пароль должен содержать не менее 6 символов\r\n                                <span class=\"inputRequired\">*</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div class=\"formPassword1\">\r\n                            <input class=\"InputMain\" id=\"password1\" type=\"password\"/>\r\n                            <label class=\"formPassword1Label\">\r\n                                Повторите пароль, пароли должны совпадать\r\n                                <span class=\"inputRequired\">*</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div class=\"formPhoto\">\r\n                            <label class=\"formPhotoLabel\">\r\n                                ПРИКРЕПИТЬ ФОТО\r\n                            </label>\r\n                            <input class=\"InputPhoto\" id=\"photo\" type=\"file\" accept=\"image/*\" />\r\n                        </div>\r\n\r\n                        <div class=\"buttonPush\">\r\n                            <button class=\"button\" type=\"submit\">Зарегистрироваться</button>\r\n                        </div>\r\n                    </form>\r\n                    <div id=\"statusSpan\" style={{marginTop: 10+'px'}}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderStatus(statusString, colorSpan)\r\n    {\r\n        let statusSpan = document.getElementById(\"statusSpan\");\r\n        let messageSpan = <span style={{ color: colorSpan }}>{statusString}</span>;\r\n        ReactDOM.render(messageSpan, statusSpan);\r\n    }\r\n\r\n    isValid() {\r\n        const formName = document.getElementById(\"name\");\r\n        const formSurname = document.getElementById(\"surname\");\r\n        const formEmail = document.getElementById(\"email\");\r\n        const formPassword = document.getElementById(\"password\");\r\n        const formPassword1 = document.getElementById(\"password1\");\r\n        const formPhoto = document.getElementById(\"photo\");\r\n        let uploadPh = false;\r\n\r\n        const name_pattern = new RegExp('^[A-ZА-Я]+$', 'i');\r\n        const email_pattern = new RegExp('^([A-ZА-Я]|[0-9]|\\.|-|_)+@([A-ZА-Я]|[0-9]|\\.|-|_)+\\.([A-ZА-Я]|[0-9]|\\.)+$', 'i');\r\n\r\n        if (!name_pattern.test(formName.value) || !name_pattern.test(formSurname.value))\r\n        {\r\n            alert('Имя и фамилия могут содержать только буквы.');\r\n            return false;\r\n        }\r\n\r\n        if (!email_pattern.test(formEmail.value))\r\n        {\r\n            alert('Некорректно введён e-mail.');\r\n            return false;\r\n        }\r\n\r\n        if (formPassword.value.length < 6)\r\n        {\r\n            alert('Пароль должен содержать более 6 символов');\r\n            return false;\r\n        }\r\n\r\n        if (formPassword.value !== formPassword1.value)\r\n        {\r\n            alert('Пароли не совпадают.');\r\n            return false;\r\n        }\r\n\r\n        if (formPhoto.files.length !== 0)\r\n        {\r\n            if (formPhoto.files[0].type.includes('image/') && formPhoto.files[0].size <= 10 * 1024 * 1024)\r\n            {\r\n                uploadPh = true;\r\n            }\r\n            else\r\n            {\r\n                alert('Файл должен быть фотографией и не может иметь размер более чем 10Мб.');\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this.registration(uploadPh);\r\n    }\r\n\r\n    uploadUserData(uid, userData) {\r\n        Firebase.firestore.collection(\"users\").doc(uid).set({\r\n            name: userData[0],\r\n            surname: userData[1],\r\n            avatar: userData[2].value === \"\" ? false : true\r\n        })\r\n        .then(result => {\r\n            this.renderStatus(\"Регистрация была успешно завершена\", \"green\");\r\n\r\n            if (userData[2].value !== \"\") {\r\n                let storageRef = Firebase.storage.ref();\r\n                let metadata = { contentType: userData[2].files[0].type };\r\n                        \r\n                storageRef.child(uid + '.jpg').put(userData[2].files[0], metadata)\r\n                    .then(upload => {\r\n                        window.location.assign('#');\r\n                    })\r\n                    .catch(error => {\r\n                        this.renderStatus(error.message, \"red\");\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            this.renderStatus(\"Ошибка отправки данных: \" + error, \"red\");\r\n        });\r\n    }\r\n\r\n    registration(uploadPhoto) {\r\n        const formName = document.getElementById(\"name\").value;\r\n        const formSurname = document.getElementById(\"surname\").value;\r\n        const formEmail = document.getElementById(\"email\").value;\r\n        const formPassword = document.getElementById(\"password\").value;\r\n        const formPhoto = document.getElementById(\"photo\");\r\n        const formUserData = [ formName, formSurname, formPhoto ];\r\n        Firebase.auth.createUserWithEmailAndPassword(formEmail, formPassword)\r\n            .then(user => {\r\n                this.uploadUserData(Firebase.auth.currentUser.uid, formUserData);\r\n            })\r\n            .catch(error => {\r\n                this.renderStatus(error.message, 'red')\r\n            });\r\n    }\r\n}\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"./css/login.css\";\r\nimport Firebase from \"./firebase\"\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"formBlockContainer\">\r\n                <div className=\"formBlock\">\r\n                    <form className=\"formApplication\" onSubmit={e => { e.preventDefault(); this.login()}}>\r\n                        <div className=\"formLogin\">\r\n                            <input defaultValue=\"2001varvara11@gmail.com\" className=\"InputMain\" id=\"login\" type=\"email\" required placeholder=\"ivan21@mail.ru\" />\r\n                            <label className=\"formLoginLabel\">\r\n                                Логин (почта)\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"formPassword\">\r\n                            <input defaultValue=\"123456\" className=\"InputMain\" id=\"password\" type=\"password\"/>\r\n                            <label className=\"formPasswordLabel\">\r\n                                Пароль\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"buttonPush\">\r\n                            <button className=\"button\" type=\"submit\">Войти</button>\r\n                            <label className=\"formRegLabel\">\r\n                                <small className=\"textLog\">Нет аккаунта? <Link style={{color: \"gray\", textDecoration: \"none\"}} to=\"/registration\">Зарегистрируйтесь.</Link></small>\r\n                            </label>\r\n                        </div>\r\n                        <span id=\"statusSpan\"></span>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderStatus(statusString, colorSpan) {\r\n        let statusSpan = document.getElementById(\"statusSpan\");\r\n        let messageSpan = <span style={{ color: colorSpan }}>{statusString}</span>;\r\n        ReactDOM.render(messageSpan, statusSpan);\r\n    }\r\n\r\n    login(){\r\n        const email = document.getElementById(\"login\").value;\r\n        const password = document.getElementById(\"password\").value;\r\n\r\n        Firebase.auth.signInWithEmailAndPassword(email, password)\r\n            .then(result => {\r\n                this.renderStatus(\"Login successful\", \"green\");\r\n                Firebase.auth.setPersistence(Firebase.persistence.SESSION)\r\n                    .then(x => {\r\n                        window.location.assign('#');\r\n                    })\r\n            })\r\n            .catch(error => {\r\n                this.renderStatus(error.message, \"red\");\r\n            });\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter, Route, Link, useHistory } from 'react-router-dom';\r\n\r\nimport \"./index.css\"\r\nimport Table from \"./components/table\";\r\nimport Register from \"./components/register\";\r\nimport Login from \"./components/login\";\r\n\r\nimport Firebase from \"./components/firebase\";\r\nFirebase.prototype.init();\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoggedIn: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        Firebase.auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({\r\n                    isLoggedIn: true\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    isLoggedIn: false\r\n                });\r\n            }\r\n          });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                {this.renderHeader()}\r\n                <Route path=\"/\" component={Table} exact />\r\n                <Route path=\"/auth\" component={Login} />\r\n                <Route path=\"/registration\" component={Register} />\r\n            </HashRouter>\r\n        )\r\n    }\r\n\r\n    renderLoggedIn() {\r\n        return <button onClick={Firebase.prototype.logout.bind(this)} className=\"btn-logout\">Выйти</button>\r\n    }\r\n\r\n    renderLoggedOut() {\r\n        return <Link to=\"/auth\"><button className=\"btn-login\">Войти</button></Link>;\r\n    }\r\n\r\n    renderHeader() {\r\n        const { isLoggedIn } = this.state;\r\n        return(\r\n            <div className=\"headerContainer\">\r\n                <div className=\"header\">\r\n                    <h1>КОНВЕРТЕР ВАЛЮТ</h1>\r\n                    <div className=\"userInfo\">\r\n                        <a href=\"#\">Главная</a>\r\n                        {isLoggedIn ? this.renderLoggedIn() : this.renderLoggedOut()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}